```{r}
library(tidyverse)
library(stringr)
library(lubridate)
library(scales)

dat = read.csv("data.csv")

dat = dat %>% pivot_longer(cols = X2000.01.01:X2022.12.01, values_to = "visitors", names_to = "year")

dat = dat %>% select(-c("X", "X1"))

dat$year = str_remove_all(dat$year, "X")

dat$year = str_replace_all(dat$year, "\\.", "-")

dat = dat %>% drop_na(region) %>% filter(year <= "2019-11-01")

dat$year = ymd(dat$year)

year = dat %>% select(year) %>% 
  filter(year >= "2012-01-01")

year = unique(year)

year2 = dat %>% select(year)

year2 = unique(year2)


```

```{r csv_clean}
library(forecast)
df2 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "China") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df2[[2]], frequency = 12, start = c(2012), end = c(2019,11))

decomp <- stl(log(test), s.window = "periodic")
ap.sa <- exp(seasadj(decomp))


df3 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "South Korea") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df3[[2]], frequency = 12, start = c(2012), end = c(2019,11))
decomp <- stl(log(test), s.window = "periodic")
ap.sk <- exp(seasadj(decomp))

df4 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "Vietnam") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df4[[2]], frequency = 12, start = c(2012), end = c(2019,11))
decomp <- stl(log(test), s.window = "periodic")
ap.v <- exp(seasadj(decomp))

frame_csv = as.data.frame(cbind(year = year, sk = ap.sk, ca = ap.sa, vt = ap.v))
frame_csv = frame_csv %>% pivot_longer(cols = sk:vt, values_to = "value", names_to = "country")

write.csv(frame_csv, "clean_data_desai_2.csv")

dat_clean = dat %>% filter(Country == c("Vietnam", "South Korea", "China"))

write.csv(dat_clean, "clean_data_2.csv")
```

```{r}
#df2 <- dat %>% select(Country, year, visitors) %>% 
#         filter(Country == "China") %>% 
#         group_by(Country, year) %>%
#         summarise(value = sum(visitors)) %>%
#         pivot_wider(names_from = Country, values_from = value, 
#         values_fill = list(value = 0)) %>% 
#         filter(year >= "2012-01-01")
#
#test = ts(df2[[2]], frequency = 12, start = c(2012), end = c(2019,11))
#
#decomp <- stl(log(test), s.window = "periodic")
#ap.sa <- exp(seasadj(decomp))

# Désaisonaliser les données de la Chine
```

```{r}
dat_cor = dat %>% select(Country, year, visitors) %>% 
         filter(year >= "2012-01-01" & year <= "2018-08-01") %>%
         drop_na(visitors) %>% 
         pivot_wider(names_from = Country, values_from = visitors) %>% 
         select(-c(year))
       
cov_mat <- cor(dat_cor)

# Extraire les corélations entre la Chine et les autres pays
china_cov <- cov_mat[, "China"]

# Extraire les 10 plus grandes covariances
head(sort(china_cov, decreasing = TRUE), 10)
 #Trouver les pays qui ont le changement de touristes le plus similaires à la Chine
```

```{r}
dat_cor2 = dat %>% select(Country, year, visitors) %>% 
         filter(year >= "2012-01-01" & year <= "2018-08-01") %>%
         #filter(Country != c("Taiwan", "Angola", "Nepal", "Côte d'Ivoire", "Gabon", "Rwanda", "Ghana", "Burkina Faso")) %>% 
         drop_na(visitors) %>% 
         group_by(Country) %>% 
         mutate(rate = (visitors - lag(visitors))/lag(visitors)) %>%  
         drop_na(rate) %>% 
         select(-c(visitors)) %>% 
         pivot_wider(names_from = Country, values_from = rate) %>% 
         select(-c(year))
         
cov_mat <- cor(dat_cor2)

# Extraire les corélations entre la Chine et les autres pays
china_cov <- cov_mat[, "China"]

# Extraire les 10 plus grandes covariances
head(sort(china_cov, decreasing = TRUE), 10)
```

```{r}
#df3 <- dat %>% select(Country, year, visitors) %>% 
#         filter(Country == "South Korea") %>% 
#         group_by(Country, year) %>%
#         summarise(value = sum(visitors)) %>%
#         pivot_wider(names_from = Country, values_from = value, 
#         values_fill = list(value = 0)) %>% 
#         filter(year >= "2012-01-01")
#
#test = ts(df3[[2]], frequency = 12, start = c(2012), end = c(2019,11))
#decomp <- stl(log(test), s.window = "periodic")
#ap.sk <- exp(seasadj(decomp))
#
#df4 <- dat %>% select(Country, year, visitors) %>% 
#         filter(Country == "Vietnam") %>% 
#         group_by(Country, year) %>%
#         summarise(value = sum(visitors)) %>%
#         pivot_wider(names_from = Country, values_from = value, 
#         values_fill = list(value = 0)) %>% 
#         filter(year >= "2012-01-01")
#
#test = ts(df4[[2]], frequency = 12, start = c(2012), end = c(2019,11))
#decomp <- stl(log(test), s.window = "periodic")
#ap.v <- exp(seasadj(decomp))


# Désaisonnaliser les autres pays similaires
```

```{r}

frame = as.data.frame(cbind(year = year, sk = log(ap.sk), ca = log(ap.sa), vt = log(ap.v)))
frame = frame %>% pivot_longer(cols = sk:vt, values_to = "value", names_to = "country")

frame1 = as.data.frame(cbind(year = year, rate_sk = (as.vector(ap.sk)-lag(as.vector(ap.sk)))/lag(as.vector(ap.sk)),
         rate_ca = (as.vector(ap.sa)-lag(as.vector(ap.sa)))/lag(as.vector(ap.sa)),
         rate_vt = (as.vector(ap.v)-lag(as.vector(ap.v)))/lag(as.vector(ap.v))))
frame1 = frame1 %>% pivot_longer(cols = rate_sk:rate_vt, values_to = "value", names_to = "country")




ggplot(frame, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "Log du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 30)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p1.png")

ggplot(frame1, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "% du changement du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 30)) +
  scale_y_continuous(labels = percent, limits = c(-1,1)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p2.png")

frame2 = frame1 %>% filter(year >= "2015-01-01")

ggplot(frame2, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "% du changement du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 30)) +
  scale_y_continuous(labels = percent, limits = c(-1,1)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p3.png")
```

```{r}
dat_model = as.data.frame(cbind(year = year, sk = ap.sk, ca = ap.sa))
dat_model = dat_model%>% pivot_longer(cols = sk:ca, values_to = "value", names_to = "country")

dat_model = dat_model %>% mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))

dat_model = dat_model %>% mutate(sanction2 = ifelse(year >= "2018-09-01", 1, 0))

dat_model = dat_model %>% mutate(china = ifelse(country == "ca", 1, 0))

dat_model$did = dat_model$china*dat_model$sanction

dat_model$did2 = dat_model$china*dat_model$sanction2

did_model = lm(value ~ year + sanction + china + did, data = dat_model)
summary(did_model)

did_model_alt = lm(value ~ year + sanction2 + china + did2, data = dat_model)
summary(did_model_alt)
```

```{r}
#dat_mod2 = frame1 %>% mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))
#
#dat_mod2 = dat_mod2 %>% mutate(sanction2 = ifelse(year >= "2018-09-01", 1, 0))
#
#dat_mod2 = dat_mod2 %>% mutate(china = ifelse(country == "rate_ca", 1, 0))
#
#dat_mod2$did = dat_mod2$china*dat_mod2$sanction
#
#dat_mod2$did2 = dat_mod2$china*dat_mod2$sanction2
#
#did_model2 = lm(value ~ year + sanction + china + did, data = dat_mod2)
#summary(did_model2)
#
#did_model2_alt = lm(value ~ year + sanction2 + china + did2, data = dat_mod2)
#summary(did_model2)
```

```{r}
dat_mod3 = frame %>% filter(country != "vt") %>% 
  mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))

dat_mod3 = dat_mod3 %>% mutate(sanction2 = ifelse(year >= "2018-09-01", 1, 0))

dat_mod3 = dat_mod3 %>% mutate(china = ifelse(country == "ca", 1, 0))

dat_mod3$did = dat_mod3$china*dat_mod3$sanction

dat_mod3$did2 = dat_mod3$china*dat_mod3$sanction2

did_model3 = lm(value ~ year + sanction + china + did, data = dat_mod3)
summary(did_model3)

did_model3_alt = lm(value ~ year + sanction2 + china + did2, data = dat_mod3)
summary(did_model3_alt)
```

```{r}
library(stargazer)

stargazer(did_model, did_model_alt, did_model3, did_model3_alt, title="Résultat des régressions", align=TRUE, dep.var.labels=c("Nombre de touristes","Log du nombre"), covariate.labels=c("Mois","Sanction", "Sanction 2", "Chine", "Dif. en Dif.", "Dif. en Dif."), omit.stat=c("LL","ser","f"), no.space=TRUE, out = "models_sk.htm")
```

```{r}
dat_model_vt = as.data.frame(cbind(year = year, ca = ap.sa, vt = ap.v))
dat_model_vt = dat_model_vt%>% pivot_longer(cols = ca:vt, values_to = "value", names_to = "country")

dat_model_vt = dat_model_vt %>% mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))

dat_model_vt = dat_model_vt %>% mutate(sanction2 = ifelse(year >= "2018-09-01", 1, 0))

dat_model_vt = dat_model_vt %>% mutate(china = ifelse(country == "ca", 1, 0))

dat_model_vt$did = dat_model_vt$china*dat_model_vt$sanction

dat_model_vt$did2 = dat_model_vt$china*dat_model_vt$sanction2

did_model_vt = lm(value ~ year + sanction + china + did, data = dat_model_vt)
summary(did_model_vt)

did_model_alt_vt = lm(value ~ year + sanction2 + china + did2, data = dat_model_vt)
summary(did_model_alt_vt)
```

```{r}
dat_mod3_vt = frame %>% filter(country != "sk") %>% 
  mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))

dat_mod3_vt = dat_mod3_vt %>% mutate(sanction2 = ifelse(year >= "2018-09-01", 1, 0))

dat_mod3_vt = dat_mod3_vt %>% mutate(china = ifelse(country == "ca", 1, 0))

dat_mod3_vt$did = dat_mod3_vt$china*dat_mod3_vt$sanction

dat_mod3_vt$did2 = dat_mod3_vt$china*dat_mod3_vt$sanction2

did_model3_vt = lm(value ~ year + sanction + china + did, data = dat_mod3_vt)
summary(did_model3_vt)

did_model3_alt_vt = lm(value ~ year + sanction2 + china + did2, data = dat_mod3_vt)
summary(did_model3_alt_vt)
```

```{r}
stargazer(did_model_vt, did_model_alt_vt, did_model3_vt, did_model3_alt_vt, title="Résultat des régressions", align=TRUE, dep.var.labels=c("Nombre de touristes","Log du nombre"), covariate.labels=c("Mois","Sanction", "Sanction 2", "Chine", "Dif. en Dif.", "Dif. en Dif."), omit.stat=c("LL","ser","f"), no.space=TRUE, out = "models_vt.htm")
```
