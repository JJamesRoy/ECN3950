```{r}
library(tidyverse)
library(stringr)
library(lubridate)
library(scales)
library(fastDummies)
library(stargazer)

```

```{r}
dat = read.csv("data.csv") # Lire les données

dat = dat %>% pivot_longer(cols = X2000.01.01:X2022.12.01, values_to = "visitors", names_to = "year") # Pivoter les données pour pouvoir les nettoyer

dat = dat %>% select(-c("X", "X1", "X.1"))

dat$year = str_remove_all(dat$year, "X")

dat$year = str_replace_all(dat$year, "\\.", "-")

# Nettoyage

dat = dat %>% drop_na(region) %>% filter(year <= "2019-11-01") # Utiliser les données pré-covid

dat$year = ymd(dat$year)

year = dat %>% select(year) %>% 
  filter(year >= "2012-01-01")

year = unique(year)


```

```{r csv_clean}
library(forecast)
df2 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "China") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df2[[2]], frequency = 12, start = c(2012), end = c(2019,11))

decomp <- stl(log(test), s.window = "periodic")
ap.sa <- exp(seasadj(decomp)) #Désaisonnalisation de la Chine


df3 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "South Korea") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df3[[2]], frequency = 12, start = c(2012), end = c(2019,11))
decomp <- stl(log(test), s.window = "periodic")
ap.sk <- exp(seasadj(decomp)) #Désaisonnalisation de la Corée du Sud

df4 <- dat %>% select(Country, year, visitors) %>% 
         filter(Country == "Vietnam") %>% 
         group_by(Country, year) %>%
         summarise(value = sum(visitors)) %>%
         pivot_wider(names_from = Country, values_from = value, 
         values_fill = list(value = 0))

test = ts(df4[[2]], frequency = 12, start = c(2012), end = c(2019,11))
decomp <- stl(log(test), s.window = "periodic")
ap.v <- exp(seasadj(decomp)) #Désaisonnalisation du Vietnam

frame_csv = as.data.frame(cbind(year = year, sk = ap.sk, ca = ap.sa, vt = ap.v))
frame_csv = frame_csv %>% pivot_longer(cols = sk:vt, values_to = "value", names_to = "country") # Création d'un dataset avec les nouvelles données

write.csv(frame_csv, "clean_data_desai_2.csv")

dat_clean = dat %>% filter(Country == c("Vietnam", "South Korea", "China"))

write.csv(dat_clean, "clean_data_2.csv")

# Création de deux dataset en .csv afin de les utiliser pour les stat descriptives
```

```{r}
dat_cor = dat %>% select(Country, year, visitors) %>% 
         filter(year >= "2012-01-01" & year <= "2018-08-01") %>%
         drop_na(visitors) %>% 
         pivot_wider(names_from = Country, values_from = visitors) %>% 
         select(-c(year))
       
cov_mat <- cor(dat_cor)

# Extraire les corélations entre la Chine et les autres pays
china_cov <- cov_mat[, "China"]

# Extraire les 10 plus grandes covariances
head(sort(china_cov, decreasing = TRUE), 10)
 #Trouver les pays qui ont le changement de touristes le plus similaires à la Chine
```

```{r}
dat_cor2 = dat %>% select(Country, year, visitors) %>% 
         filter(year >= "2012-01-01" & year <= "2018-08-01") %>%
         drop_na(visitors) %>% 
         group_by(Country) %>% 
         mutate(rate = (visitors - lag(visitors))/lag(visitors)) %>%  
         drop_na(rate) %>% 
         select(-c(visitors)) %>% 
         pivot_wider(names_from = Country, values_from = rate) %>% 
         select(-c(year))
         
cov_mat <- cor(dat_cor2)

# Extraire les corélations entre la Chine et les autres pays
china_cov <- cov_mat[, "China"]

# Extraire les 10 plus grandes covariances
head(sort(china_cov, decreasing = TRUE), 10)
```

```{r}

frame = as.data.frame(cbind(year = year, sk = log(ap.sk), ca = log(ap.sa), vt = log(ap.v)))
frame = frame %>% pivot_longer(cols = sk:vt, values_to = "value", names_to = "country")
# Création de données utilisant les logs des données

frame1 = as.data.frame(cbind(year = year, rate_sk = (as.vector(ap.sk)-lag(as.vector(ap.sk)))/lag(as.vector(ap.sk)),
         rate_ca = (as.vector(ap.sa)-lag(as.vector(ap.sa)))/lag(as.vector(ap.sa)),
         rate_vt = (as.vector(ap.v)-lag(as.vector(ap.v)))/lag(as.vector(ap.v))))
frame1 = frame1 %>% pivot_longer(cols = rate_sk:rate_vt, values_to = "value", names_to = "country")
# Création de données utilisant le taux de croissance des données




```

```{r}
# Création de différents graphiques sur les touristes
ggplot(frame, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "Log du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 12)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p1.png", width = 8, height =5)

ggplot(frame1, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "% du changement du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 30)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p2.png")

frame2 = frame1 %>% filter(year >= "2015-01-01")

ggplot(frame2, aes(year, value, group = country, color = country)) +
  geom_line() +
  labs(y = "% du changement du nombre de touristes",
       x = "Temps",
       color = "Pays") +
  theme_minimal() +
  theme(text = element_text(size = 12)) +
  scale_color_discrete(labels=(c("Chine", "Corée du Sud", "Vietnam")))

ggsave("p3.png", width = 8, height =5)
```

```{r}
dat_model = as.data.frame(cbind(year = year, sk = ap.sk, ca = ap.sa, vt = ap.v))

dat_model = dat_model %>% mutate(mean = rowMeans(dat_model[,c('sk', 'vt')], na.rm=TRUE))

dat_model = dat_model%>% pivot_longer(cols = sk:mean, values_to = "value", names_to = "country")

dat_model = dat_model %>% mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))

dat_model = dat_model %>% mutate(china = ifelse(country == "ca", 1, 0))

dat_model$did = dat_model$china*dat_model$sanction
# Peaufinage du dataset pour la 1ere régression

```

```{r}
#df3 = df3 %>% filter(year >= "2012-01-01")
#df4 = df4 %>% filter(year >= "2012-01-01")
#df2 = df2 %>% filter(year >= "2012-01-01")
#
#dat_nmod = as.data.frame(cbind(year = year, sk = df3[[2]], ca = df2[[2]], vt = df4[[2]]))
#
#dat_nmod = dat_nmod %>% mutate(mean = rowMeans(dat_nmod[,c('sk', 'vt')], na.rm=TRUE))
#
#dat_nmod = dat_nmod %>% pivot_longer(cols = sk:mean, values_to = "value", names_to = #"country")
#
#dat_nmod = dat_nmod %>% mutate(sanction = ifelse(year >= "2018-08-01", 1, 0))
#
#dat_nmod = dat_nmod %>% mutate(china = ifelse(country == "ca", 1, 0))
#
#dat_nmod$did = dat_nmod$china*dat_nmod$sanction


```

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-- COMMENTAIRE PROF\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--

```{r}

month = seq(95) # 95 car on a une séquence de 95 mois dans les données

t = 80 # la sanction est arrivée au 80 t de la série

dat_e = dat_model %>% group_by(country) %>% 
  mutate(relative = month - t) %>%  # Créé une variable relative qui est négative avant la sanction et positive après
  mutate(relative_n = ifelse(relative < 0, relative, 0)) %>%  # Isole les variables négatives
  mutate(relative_p = ifelse(relative > 0, relative, 0)) # Isole les varibles positives

dat_e$lead = dat_e$china*dat_e$relative_n # Créé la variable lead
dat_e$lag = dat_e$china*dat_e$relative_p # Créé la variable lag

dat_e = dat_e %>% mutate(time0 = ifelse(relative == 0 & country == "ca", 1, 0))

dat_e = dat_e %>% mutate(month = month(ymd(year)))
                         
dat_e_vt = dat_e %>% filter(country == "ca" | country == "vt")

dat_e_sk = dat_e %>% filter(country == "ca" | country == "sk")

dat_e_mean = dat_e %>% filter(country == "ca" | country == "mean")

```

```{r}
#dat_e_2 = dat_nmod %>% group_by(country) %>% 
#  mutate(relative = month - t) %>%  # Créé une variable relative qui est négative avant la #sanction et positive après
#  mutate(relative_n = ifelse(relative < 0, relative, 0)) %>%  # Isole les variables #négatives
#  mutate(relative_p = ifelse(relative > 0, relative, 0)) # Isole les varibles positives
#
#dat_e_2$lead = dat_e_2$china*dat_e_2$relative_n # Créé la variable lead
#dat_e_2$lag = dat_e_2$china*dat_e_2$relative_p # Créé la variable lag
#
#dat_e_2 = dat_e_2 %>% mutate(time0 = ifelse(relative == 0 & country == "ca", 1, 0))
#
#dat_e_2 = dat_e_2 %>% mutate(month = month(ymd(year)))
#                         
#dat_e_vt_2 = dat_e_2 %>% filter(country == "ca" | country == "vt")
#
#dat_e_sk_2 = dat_e_2 %>% filter(country == "ca" | country == "sk")
#
#dat_e_mean_2 = dat_e_2 %>% filter(country == "ca" | country == "mean")
```

```{r}
dat_es = dummy_cols(dat_e, select_columns = c("year","lead","lag"), remove_first_dummy = TRUE) # Créé les dummy pour les n-1 lag, lead et les effets fixes pour les mois

dat_es_vt = dummy_cols(dat_e_vt, select_columns = c("lead","lag", "year"), remove_first_dummy = TRUE)

dat_es_sk = dummy_cols(dat_e_sk, select_columns = c("year","lead","lag"), remove_first_dummy = TRUE)

dat_es_mean = dummy_cols(dat_e_mean, select_columns = c("year","lead","lag"), remove_first_dummy = TRUE)
```

```{r}
#dat_es_2 = dummy_cols(dat_e, select_columns = c("year","lead","lag", "month"), #remove_first_dummy = TRUE) # Créé les dummy pour les n-1 lag, lead et les effets fixes pour #les mois
#
#dat_es_vt_2 = dummy_cols(dat_e_vt, select_columns = c("lead","lag", "year", "month"), #remove_first_dummy = TRUE)
#
#dat_es_sk_2 = dummy_cols(dat_e_sk, select_columns = c("year","lead","lag", "month"), #remove_first_dummy = TRUE)
#
#dat_es_mean_2 = dummy_cols(dat_e_mean, select_columns = c("year","lead","lag", "month"), #remove_first_dummy = TRUE)
```

```{r}
# Régression event-study
dat_es = dat_es %>% select( -c(lead_0, relative, relative_p, relative_n))
#dat_es_2 = dat_es_2 %>% select( -c(lead_0, relative, relative_p, relative_n))

model_es = lm(value ~ . -country -did -sanction -month -year -lead -lag, data = dat_es)
summary(model_es)
#model_es_2 = lm(value ~ . -country -did -sanction -month -year -lead -lag, data = dat_es_2)
#summary(model_es_2)

#Regression avec FE pour le temps, pour les lag et pour les lead
```

```{r}
dat_es_vt = dat_es_vt %>% select( -c(lead_0, relative, relative_p, relative_n))


model_es_vt = lm(value ~ .-country -did -sanction -month -year -lead -lag, data = dat_es_vt)
summary(model_es_vt)
```

```{r}
dat_es_sk = dat_es_sk %>% select( -c(lead_0, relative, relative_p, relative_n))


model_es_sk = lm(value ~ . -country -did -sanction -month -year -lead -lag, data = dat_es_sk)
summary(model_es_sk)
```

```{r}
dat_es_mean = dat_es_mean %>% select( -c(lead_0, relative, relative_p, relative_n))


model_es_mean = lm(value ~ . -country -did -sanction -month -year -lead -lag, data = dat_es_mean)
summary(model_es_mean)
```

```{r}
# Régression pure avec trois pays
did_model = lm(value ~ sanction + china + did, data = dat_model)
summary(did_model)
```

```{r}
# Régression avec controle pour pays et année (FIXED EFFECTS)
dat_model2 = dummy_cols(dat_model, select_columns = c("year", "country"), remove_first_dummy = TRUE)

dat_model2 = dat_model2 %>% select(-c("country_mean", "country_sk"))

did_model2 = lm(value ~ . -year -country, data = dat_model2)
summary(did_model2)
```

```{r}
stargazer(did_model, did_model2, title="Résultat des régressions ES", keep = c("china", "did", "sanction"), align=TRUE, dep.var.labels=c("Nombre de touristes"), covariate.labels=c("Chine", "Sanction", "Dif. en Dif."), omit.stat=c("LL","ser","f"), no.space=TRUE, out = "models.htm")
```
